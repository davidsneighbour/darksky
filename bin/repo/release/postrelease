#!/bin/bash

# set -euo pipefail # http://redsymbol.net/articles/unofficial-bash-strict-mode
# IFS=$'\n\t'

REQUIRED_TOOLS=(
  git
  sed
  node
)

# check if all requirements are met
for TOOL in "${REQUIRED_TOOLS[@]}"; do
  if ! command -v "${TOOL}" >/dev/null; then
    echo "${TOOL} is required... "
    exit 1
  fi
done

VERSION=$(node -pe 'require("./package.json")["version"]')

# Load ~/.env if it exists
GLOBAL_ENV="$HOME/.env"
if [ -f "$GLOBAL_ENV" ]; then
  echo "Loading global ~/.env"
  set -a
  # shellcheck source=/dev/null
  source "$GLOBAL_ENV"
  set +a
fi

# Override with local .env if it exists
LOCAL_ENV=".env"
if [ -f "$LOCAL_ENV" ]; then
  echo "Loading local .env"
  set -a
  # shellcheck source=/dev/null
  source "$LOCAL_ENV"
  set +a
else
  echo "No local .env file found"
fi

# push everything up
git push origin main --follow-tags
git push origin --tags

# create a release on GitHub
CHANGES=$(jq -Rs . <changes.md)
GITHUB_REPO=https://github.com/${GITHUB_REPOSLUG}
TAGNAME=v${VERSION}
URL="$GITHUB_REPO"/"releases/edit/v""$VERSION"
response=$(curl -s -o response.json -w "%{http_code}" \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: token ${GITHUB_SECRET}" \
  https://api.github.com/repos/"${GITHUB_REPOSLUG}"/releases \
  -d "{ \
      \"tag_name\":\"${TAGNAME}\", \
      \"name\":\"${TAGNAME}\", \
      \"body\":${CHANGES}, \
      \"generate_release_notes\":false \
  }")

if [[ "$response" -ge 200 && "$response" -lt 300 ]]; then
  echo "Release created successfully."
  rm changes.md
else
  echo "Failed to create release. Status code: $response"
  echo "Opening changes file for review."
  code changes.md
fi
xdg-open "${URL}" &>/dev/null

npm publish --access public
